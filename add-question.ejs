<!DOCTYPE html>
<html lang="vi">
  <head>
    <meta charset="UTF-8" />
    <title>‚ûï Th√™m c√¢u h·ªèi</title>
    <link rel="stylesheet" href="style.css" />
  </head>
  <body>
    <div class="login-container">
      <h2>‚ûï Th√™m c√¢u h·ªèi</h2>

      <form id="question-form">
        <div class="input-group">
          <label>C√¢u h·ªèi:</label>
          <input type="text" id="question" required />
        </div>

        <div class="input-group">
          <label>ƒê√°p √°n A:</label>
          <input type="text" id="a" required />
        </div>

        <div class="input-group">
          <label>ƒê√°p √°n B:</label>
          <input type="text" id="b" required />
        </div>

        <div class="input-group">
          <label>ƒê√°p √°n C:</label>
          <input type="text" id="c" required />
        </div>

        <div class="input-group">
          <label>ƒê√°p √°n D:</label>
          <input type="text" id="d" required />
        </div>

        <div class="input-group">
          <label>ƒê√°p √°n ƒë√∫ng:</label>
          <select id="correct">
            <option value="a">A</option>
            <option value="b">B</option>
            <option value="c">C</option>
            <option value="d">D</option>
          </select>
        </div>

        <button type="submit">‚ûï Th√™m c√¢u h·ªèi</button>
        <p id="success-msg" style="color: green"></p>
      </form>

      <hr />

      <div id="question-list">
        <!-- Danh s√°ch c√¢u h·ªèi hi·ªÉn th·ªã ·ªü ƒë√¢y -->
      </div>

      <button onclick="deleteAllQuestions()">üóëÔ∏è X√≥a to√†n b·ªô c√¢u h·ªèi</button>
      <button onclick="exportJSON()">‚¨áÔ∏è Xu·∫•t file JSON</button>

      <a href="/dashboard" class="back-button">‚¨ÖÔ∏è Quay l·∫°i menu</a>
    </div>

    <script>
      const listContainer = document.getElementById("question-list");
      const form = document.getElementById("question-form");

      function getQuestions() {
        return JSON.parse(localStorage.getItem("questions")) || [];
      }

      function saveQuestions(list) {
        localStorage.setItem("questions", JSON.stringify(list));
      }

      function renderQuestionList() {
        const list = getQuestions();
        listContainer.innerHTML = "";

        if (list.length === 0) {
          listContainer.innerHTML = "<p>‚ö†Ô∏è Ch∆∞a c√≥ c√¢u h·ªèi n√†o.</p>";
          return;
        }

        list.forEach((q, index) => {
          const div = document.createElement("div");
          div.className = "question-item";
          div.innerHTML = `
            <strong>C√¢u ${index + 1}:</strong> ${q.question}<br>
            <em>A:</em> ${q.answers.a} |
            <em>B:</em> ${q.answers.b} |
            <em>C:</em> ${q.answers.c} |
            <em>D:</em> ${q.answers.d}<br>
            <em>ƒê√°p √°n ƒë√∫ng:</em> ${q.correct.toUpperCase()}<br>
            <button onclick="deleteQuestion(${index})">‚ùå Xo√° c√¢u n√†y</button>
          `;
          listContainer.appendChild(div);
        });
      }

      form.addEventListener("submit", function (e) {
        e.preventDefault();

        const newQuestion = {
          question: document.getElementById("question").value,
          answers: {
            a: document.getElementById("a").value,
            b: document.getElementById("b").value,
            c: document.getElementById("c").value,
            d: document.getElementById("d").value,
          },
          correct: document.getElementById("correct").value,
        };

        const list = getQuestions();
        list.push(newQuestion);
        saveQuestions(list);

        document.getElementById("success-msg").textContent = "‚úÖ ƒê√£ l∆∞u c√¢u h·ªèi!";
        form.reset();
        renderQuestionList();
      });

      function deleteQuestion(index) {
        const list = getQuestions();
        if (confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a c√¢u h·ªèi n√†y?")) {
          list.splice(index, 1);
          saveQuestions(list);
          renderQuestionList();
        }
      }

      function deleteAllQuestions() {
        if (confirm("‚ö†Ô∏è B·∫°n ch·∫Øc ch·∫Øn mu·ªën x√≥a to√†n b·ªô c√¢u h·ªèi?")) {
          localStorage.removeItem("questions");
          renderQuestionList();
        }
      }

      function exportJSON() {
        const data = localStorage.getItem("questions");
        if (!data) {
          alert("‚ùå Kh√¥ng c√≥ c√¢u h·ªèi n√†o ƒë·ªÉ xu·∫•t!");
          return;
        }

        const blob = new Blob([data], { type: "application/json" });
        const url = URL.createObjectURL(blob);
        const a = document.createElement("a");
        a.href = url;
        a.download = "questions.json";
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
      }

      // G·ªçi khi trang t·∫£i
      renderQuestionList();
    </script>
  </body>
</html>
